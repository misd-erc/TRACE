@model TRACE.Models.CaseEventType

@{
    ViewData["Title"] = "Edit";
}

<div class="crumbs">
    <a href="/contentmanagement">Content Management</a> > Edit
</div>

<h1>Edit</h1>

<p>This page is for editing Case Event Type.</p>
<hr />
<div class="row">
    <div class="col-md-4">
        <form id="editForm" asp-action="Edit" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="CaseEventTypeId" />
            <div class="form-group">
                <label asp-for="EventType" class="control-label"></label>
                <input asp-for="EventType" id="event-type-input" maxlength="50" class="form-control" />
                <span asp-validation-for="EventType" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        $(document).ready(function () {
            _setInputAlphabet("#event-type-input")

            $("#editForm").submit(function (event) {
                event.preventDefault();
                if (!_inputHasValue("#event-type-input", "Event Type")) return;

                $.ajax({
                    url: $(this).attr("action"),
                    type: "POST",
                    data: $(this).serialize(),
                    success: function (response) {
                        if (response.success) {
                            Swal.fire({
                                title: "Success!",
                                text: response.message,
                                icon: "success",
                                confirmButtonText: "OK",
                                customClass: {
                                    popup: "swal2-popup",
                                    title: "swal2-title",
                                    content: "swal2-content",
                                    confirmButton: "swal2-confirm"
                                }
                            }).then(() => {
                                location.reload();
                            });
                        } else {
                            Swal.fire({
                                title: "Error!",
                                text: response.message,
                                icon: "error",
                                confirmButtonText: "Try Again"
                            });
                        }
                    },
                    error: function () {
                        Swal.fire({
                            title: "Oops!",
                            text: "Something went wrong. Please try again.",
                            icon: "error",
                            confirmButtonText: "OK"
                        });
                    }
                });
            });
        });
    </script>
}


