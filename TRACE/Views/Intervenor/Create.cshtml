@model TRACE.Models.Intervenor

@{
    ViewData["Title"] = "Add Intervenor";
}


<div class="crumbs">
    <a href="javascript:history.back();">Go Back</a> > Add Intervenor
</div>
<form id="createForm" asp-action="Create" method="post">
    <div class="main-head-div flex h-center space-between">
        <div class="title-div">
            <h3>ADD INTERVENOR</h3>
            <p>This page is for adding intervenor for the selected erc case</p>
        </div>

        <div class="btn-div">
            <input type="submit" value="ADD INTERVENOR" class="btn btn-primary" />
        </div>
    </div>
    <div class="case-card shadow border-radius-5">
        <div class="form-div  create-lc">
            <div class="grid grid-three-fr gap-10">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-input-div">
                    <label asp-for="CompanyId" class="control-label">Correspondent Name</label>
                    <select asp-for="CompanyId" class="form-control" asp-items="ViewBag.Company" id="_company"></select>
                </div>

                <div class="form-input-div">
                    <label asp-for="CaseId" class="control-label" style="display:none"> </label>
                    <input asp-for="CaseId" type="hidden" class="form-control" id="ErccaseId" />
                </div>
            </div>
        </div>
    </div>
</form>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        $(document).ready(function () {
            const element2 = document.getElementById('_company');
            const choices2 = new Choices(element2, {
                searchEnabled: true,
                searchChoices: false,
                placeholder: true,
                placeholderValue: 'Search Company',
                shouldSort: false
            });

            element2.addEventListener('search', function (event) {
                const searchTerm = event.detail.value;

                if (searchTerm.length < 2) return;

                fetch(`/CaseRespondents/Search1?term=${encodeURIComponent(searchTerm)}`)
                    .then(response => response.json())
                    .then(data => {
                        choices2.clearChoices();

                        choices2.setChoices(data.map(item => ({
                            value: item.id,
                            label: item.text,
                            selected: false,
                            disabled: false
                        })), 'value', 'label', true);
                    })
                    .catch(error => {
                        console.error('Error fetching search results:', error);
                    });
            });


            $("#createForm").submit(function (event) {
                event.preventDefault();

                $.ajax({
                    url: $(this).attr("action"),
                    type: "POST",
                    data: $(this).serialize(),
                    success: function (response) {
                        if (response.success) {
                            Swal.fire({
                                title: "Success!",
                                text: response.message,
                                icon: "success",
                                confirmButtonText: "OK",
                                customClass: {
                                    popup: "swal2-popup",
                                    confirmButton: "swal2-confirm"
                                }
                            }).then(() => {
                                $("#createForm")[0].reset();
                            });
                        } else {
                            Swal.fire({
                                title: "Error!",
                                text: response.message,
                                icon: "error",
                                confirmButtonText: "Try Again"
                            });
                        }
                    },
                    error: function () {
                        Swal.fire({
                            title: "Oops!",
                            text: "Something went wrong. Please try again.",
                            icon: "error",
                            confirmButtonText: "OK",
                            customClass: {
                                popup: "swal2-popup",
                                confirmButton: "swal2-confirm"
                            }
                        });
                    }
                });
            });
        });
    </script>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Get the URL parameter
            const urlParams = new URLSearchParams(window.location.search);
            const erccaseId = urlParams.get('id');

            // Set the hidden input field value if erccaseId exists
            if (erccaseId) {
                const inputElement = document.getElementById('ErccaseId');

                if (inputElement) {
                    inputElement.value = erccaseId;
                } else {
                    console.error('ErccaseId input not found');
                }
            }
        });

    </script>

}
