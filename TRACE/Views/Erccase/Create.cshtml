@model TRACE.Models.Erccase

@{
    ViewData["Title"] = "Create";
}


<div class="crumbs">
    <a href="/dashboard">Dashboard</a> > <a href="javascript:history.back();">Case Management</a> > Create
</div>
<form id="createForm" asp-action="Create">
    <div class="main-head-div flex h-center space-between">
        <div class="title-div">
            <h3>CREATE CASE</h3>
            <p>This page is for creating erc case</p>
        </div>
    
        <div class="btn-div">
            <input type="submit" value="Create" class="btn btn-primary" />
        </div>
    </div>

    <div class="case-card shadow border-radius-5">
        <div class="form-div  create-lc">
                <div class="grid grid-three-fr gap-10">
                <div class="form-input-div">
                    <label  class="control-label">Case Number</label><br />
                    <i style="font-size:11px;">(This will be generated once case category is selected)</i>
                    <input class="form-control" id="caseNoInput" disabled placeholder="This will be generated"/>
                </div>
                    <div class="form-input-div">
                        <label asp-for="CaseCategoryId" class="control-label"></label><span style="color:red">*</span>
                        <select asp-for="CaseCategoryId" class="form-control" asp-items="ViewBag.CaseCategoryId" id="CaseCategoryIdDropdown">
                        </select>
                    </div>
                    <div class="form-input-div">
                        <label asp-for="CaseNature" class="control-label"></label><span style="color:red">*</span>
                        <select asp-for="CaseNatureId" class="form-control" id="CasenatureIdDropdown">
                            <option value="">-- Select Nature --</option>
                        </select>

                    </div>
                <div class="form-input-div">
                    <label asp-for="SubCaseNature" class="control-label"></label><span style="color:red"></span>
                    <select asp-for="SubCaseNature" class="form-control" id="SubCasenatureDropdown">
                            <option value="">-- Select Sub Nature --</option>
                        </select>

                </div>
                    <div class="form-input-div">
                        <label asp-for="Title" class="control-label"></label><span style="color:red">*</span>
                        <textarea asp-for="Title" id="title-input" class="form-control"></textarea>
                    </div>
                    <div class="form-input-div">
                        <label>Remarks</label>
                        <textarea></textarea>
                    </div>
                    <div class="form-input-div">
                        <label asp-for="MeterSin" class="control-label">Meter Sin</label>
                        <input asp-for="MeterSin" id="meter-sin" class="form-control" />
                    </div>
                </div>

                <div class="grid grid-five-fr gap-10">
                    <div class="form-input-div">
                    <label asp-for="DateFiled" class="control-label">Date Filed</label><span style="color:red">*</span>
                        <input asp-for="DateFiled" id="date-filed-input" class="form-control" type="date" />
                    </div>
                    <div class="form-input-div">
                        <label asp-for="DateDocketed" class="control-label">Date Docketed</label>
                        <input asp-for="DateDocketed" id="date-docketed" class="form-control" type="date" />
                   
                    </div>
                    <div class="form-input-div">
                        <label asp-for="NoOfFolders" class="control-label">No. of Folders</label><span style="color:red">*</span>
                        <input asp-for="NoOfFolders" id="no-of-folders-input" class="form-control" type="number" />
                    </div>
                    <div class="form-input-div">
                        <label asp-for="AmountClaimed" class="control-label">Amount Claimed</label>
                        <input asp-for="AmountClaimed" id="amount-claimed" class="form-control" type="text" />
                    </div>
                    <div class="form-input-div">
                        <label asp-for="AmountSettled" class="control-label">Amount Settled</label>
                    <input asp-for="AmountSettled" id="amount-settled" class="form-control" type="text" />
                   
                    </div>
                    <div class="form-input-div">
                        <label asp-for="TargetPaissuance" class="control-label">Target PA Issuance</label>
                        <input asp-for="TargetPaissuance" id="target-pa-issuance" class="form-control" type="date" />
                    </div>
                    <div class="form-input-div">
                        <label asp-for="TargetPaissuance" class="control-label">TARGET FA Issuance</label>
                        <input asp-for="TargetPaissuance" id="target-fa-issuance"  class="form-control" type="date" />
                   
                    </div>
                    <div class="form-input-div">
                        <label asp-for="PadeliberationDate" class="control-label">PA Deliberation Date</label>
                        <input asp-for="PadeliberationDate" id="pa-deliberation-date" class="form-control" type="date" />
                 
                    </div>
                    <div class="form-input-div">
                        <label asp-for="FadeliberationDate" class="control-label">FA Deliberation Date</label>
                        <input asp-for="FadeliberationDate" id="fa-delibiration-date" class="form-control" type="date" />
                   
                    </div>
                    <div class="form-input-div">
                        <label asp-for="PatargetOrder" class="control-label">PA Target Order</label>
                        <input asp-for="PatargetOrder" id="pa-target-order" class="form-control" type="date" />
                   
                    </div>
                    <div class="form-input-div">
                        <label asp-for="FatargetOrder" class="control-label">FA Target Order</label>
                        <input asp-for="FatargetOrder" id="fa-target-order" class="form-control" type="date" />
                   
                    </div>
                    <div class="form-input-div">
                        <label asp-for="Synopsis" class="control-label">Synopsis</label>
                        <input asp-for="Synopsis" class="form-control" type="text" />
                    </div>
                    <div class="form-input-div">
                        <label asp-for="SubmittedForResolution" class="control-label">Submitted for Resolution</label>
                        <input asp-for="SubmittedForResolution" id="submitted-for-resolution" class="form-control" type="date" />
                    </div>
                </div>
        </div>
    </div>
 </form>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const dateFiledInput = document.querySelector('input[name="DateFiled"]');
            const targetPaIssuanceInput = document.querySelector('input[name="TargetPaissuance"]');

            dateFiledInput.addEventListener('change', function () {
                const filedDate = new Date(this.value);
                if (!isNaN(filedDate)) {
                    filedDate.setDate(filedDate.getDate() + 75);
                    const year = filedDate.getFullYear();
                    const month = String(filedDate.getMonth() + 1).padStart(2, '0');
                    const day = String(filedDate.getDate()).padStart(2, '0');
                    targetPaIssuanceInput.value = `${year}-${month}-${day}`;
                }
            });
        });

        $(document).ready(function () {
                _setInputMeterSin();
                _setInputNumeric("#amount-claimed");
                _setInputNumeric("#amount-settled");

                 $('#CaseCategoryIdDropdown').change(function () {
                var categoryId = $(this).val();
               
                $('#CasenatureIdDropdown').empty();

                $('#CasenatureIdDropdown').empty().append('<option>Loading...</option>');

                $.getJSON('/Erccase/GetCaseNatures', { categoryId: categoryId }, function (data) {
                    $('#CasenatureIdDropdown').empty().append('<option value="">-- Select Nature --</option>');
                    $.each(data, function (i, item) {
                        $('#CasenatureIdDropdown').append($('<option>', {
                            value: item.caseNatureId,
                            text: item.nature
                        }));
                    });
                });
                });



                  

            const element = document.getElementById('CaseCategoryIdDropdown');
            const choices = new Choices(element, {
                searchEnabled: true,
                searchFuzzy: true,
                removeItemButton: true,
                placeholder: true,
                placeholderValue: 'Search Case Category',
                searchChoices: true,
                searchResultLimit: 9,
                position: 'bottom',
            });

            // const element2 = document.getElementById('CasenatureIdDropdown');
            // const choices2 = new Choices(element2, {
            //     searchEnabled: true,
            //     searchFuzzy: true,
            //     removeItemButton: true,
            //     placeholder: true,
            //     placeholderValue: 'Search Case Nature',
            //     searchChoices: true,
            //     searchResultLimit: 9,
            //     position: 'bottom',
            // });

            $("#createForm").submit(function (event) {
                event.preventDefault();

                if (!_dropdownHasSelected("#CaseCategoryIdDropdown", "Case Category", 0)) return;
                if (!_dropdownHasSelected("#CasenatureIdDropdown", "Case Nature", 0)) return;
                if (!_inputHasValue("#title-input", "Title")) return;
                if (!_isDateInputValid("#date-filed-input", "Date Filed", isRequired = true)) return;
                if (!_inputHasValue("#no-of-folders-input", "No. of Folders")) return;
               ["#date-docketed", "#target-pa-issuance", "#target-fa-issuance", 
               "#pa-deliberation-date", "#fa-delibiration-date", "#pa-target-order", 
               "#fa-target-order", "#submitted-for-resolution"].forEach(function(selector) {
                   const keyName = selector.replace("#", "").split("-").map(function(word){
                       return word[0].toUpperCase() + word.slice(1);
                   }).join(" ")
                   _isDateInputValid(selector, keyName);
               });
               _inputHasValidNumber("#amount-claimed", "Amount Claimed")
               _inputHasValidNumber("#amount-claimed", "Amount Settled")

                $.ajax({
                    url: $(this).attr("action"),
                    type: "POST",
                    data: $(this).serialize(),
                    success: function (response) {
                        if (response.success) {
                            Swal.fire({
                                title: "Success!",
                                text: response.message,
                                icon: "success",
                                confirmButtonText: "OK",
                                customClass: {
                                    popup: "swal2-popup",
                                    confirmButton: "swal2-confirm"
                                }
                            }).then(() => {
                                $("#createForm")[0].reset();
                            });
                        } else {
                            Swal.fire({
                                title: "Error!",
                                text: "Please make sure all fields are filled up! " + response.message,
                                icon: "error",
                                confirmButtonText: "Try Again"
                            });
                        }
                    },
                    error: function () {
                        Swal.fire({
                            title: "Oops!",
                            text: "Something went wrong. Please try again.",
                            icon: "error",
                            confirmButtonText: "OK",
                            customClass: {
                                popup: "swal2-popup",
                                confirmButton: "swal2-confirm"
                            }
                        });
                    }
                });
            });
        });

        $(document).ready(function () {
            $('#CaseCategoryIdDropdown').on('change', function () {
                var selectedId = $(this).val();
                if (selectedId) {
                    fetchLastCase(selectedId);
                }
            });

            // NEW: Populate SubCaseNatureDropdown when CaseNatureIdDropdown changes
             $('#CasenatureIdDropdown').change(function () {
                        var natureId = $(this).val();
                        console.log("asdfga")
                        var $subDropdown = $('#SubCasenatureDropdown');
                        $subDropdown.empty().append('<option>Loading...</option>');

                        if (natureId) {
                            $.getJSON('/Erccase/GetSubCaseNatures', { natureId: natureId }, function (data) {
                                $subDropdown.empty().append('<option value="">-- Select SubNature --</option>');
                                $.each(data, function (i, item) {
                                   
                                    $subDropdown.append($('<option>', {
                                        value: item.caseNatureId,
                                        text: item.subNatureName
                                    }));
                                });
                            });
                        } else {
                            $subDropdown.empty().append('<option value="">-- Select SubNature --</option>');
                        }
                    });
        });

        function fetchLastCase(casecategoryId) {
            fetch(`/Erccase/GetLastCases?casecategoryId=${casecategoryId}`)
                .then(response => response.json())
                .then(data => {
                    document.getElementById('caseNoInput').value = data;
                })
                .catch(error => {
                    console.error('Error fetching case:', error);
                });
        }

        function _showErrorAlert(title) {
            Swal.fire({
                title: title,
                icon: "error",
                confirmButtonText: "OK",
                customClass: {
                    popup: "swal2-popup",
                    confirmButton: "swal2-confirm"
                }
            });
        }

        function _isDateInputValid(selector, keyName, isRequired = false) {
            const date = $(selector).val();
            if (!date) {
                if (isRequired) _showErrorAlert(`"${keyName}" is Required.`);
                return false;
            }
            const isValidFormat = /^\d{4}-\d{2}-\d{2}$/.test(date);
            const isValidValue = !isNaN(Date.parse(date));
            if (!isValidFormat || !isValidValue) {
                _showErrorAlert(`"${keyName}" is Invalid.`);
                return false;
            }

            return true;
        }
        function _inputHasValidNumber(selector, keyName, isRequired = false){
            const value = $(selector).val();
            if (!value) {
                if (isRequired) _showErrorAlert(`"${keyName}" is Required.`);
                return false;
            }
            if (isNaN(value)){
                _showErrorAlert(`"${keyName}" is Invalid.`);
                return false;
            }
            return true;
        }

        function _inputHasValue(selector, keyName){
            const value = $(selector).val();
            if (!value) {
                _showErrorAlert(`"${keyName}" is Required.`);
                return false;
            }
            return true;
        }
      
        function _dropdownHasSelected(selector, keyName, minIndex = -1) {
            const selectElement = $(selector);
            const value = selectElement.val();
            const index = selectElement[0].selectedIndex;
            if (!value || index <= minIndex) {
                _showErrorAlert(`"${keyName}" is Required.`);
                return false;
            }
            return true;
        }

        function _setInputNumeric(selector) {
            var input = $(selector);
            input.on("input", function() {
                let value = this.value.replace(/[^0-9.]/g, '');
                const parts = value.split(".");
                if (parts.length >= 2){
                    const wholeNum = parts[0] || 0
                    let decimal = parts.slice(1).join('')
                    decimal = decimal.substring(0, 2)
                    value = `${parseInt(wholeNum)}.${decimal}`;
                } else {
                    value = parseInt(value || 0);
                }
                this.value = value;
            })
            input.on("paste", function(e) {
                const pasteData = e.originalEvent.clipboardData.getData('text')
                if (!/^\d*\.?d*$/.test(pasteData)){
                    e.preventDefault();
                }
            })
        }

        function _setInputMeterSin() {
            var input = $("#meter-sin")
            input.on("input", function() {
                this.value = this.value.replace(/[^a-zA-Z0-9-]/g, '');
            })
            input.on("paste", function(e) {
                const pasteData = e.originalEvent.clipboardData.getData('text')
                if (!/[^a-zA-Z0-9-]+$/.test(pasteData)){
                    e.preventDefault();
                }
            })
        }
    </script>
}
