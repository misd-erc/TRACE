@model TRACE.Models.Intervenor

@{
    ViewData["Title"] = "Create";
}

<h1>Create Intervenor</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form id="createForm" asp-action="Create" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            @* <div class="form-group">
                <label asp-for="IntervenorId" class="control-label"></label>
                <input asp-for="IntervenorId" class="form-control" />
                <span asp-validation-for="IntervenorId" class="text-danger"></span>
            </div> *@
            <div class="form-group" style="display:none;">
                <label asp-for="CaseId" class="control-label"></label>
                <input asp-for="CaseId" class="form-control"  >
                <span asp-validation-for="CaseId" class="text-danger"></span>
            </div>
            <div class="form-input-div">
                <label asp-for="CompanyId" class="control-label">Correspondent Name</label>
                <select asp-for="CompanyId" class="form-control" asp-items="ViewBag.Company" id="_company"></select>
            </div>
           
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Get the URL parameter
            const urlParams = new URLSearchParams(window.location.search);
            const erccaseId = urlParams.get('id');

            // Set the hidden input field value if erccaseId exists
            if (erccaseId) {
                const inputElement = document.getElementById('CaseId');
                if (inputElement) {
                    inputElement.value = erccaseId;
                } else {
                    console.error('ErccaseId input not found');
                }
            }

            const element2 = document.getElementById('company');
            if (element2) {
                element2.addEventListener('input', function (event) {
                    const searchTerm = event.target.value;

                    if (searchTerm.length < 2) return;

                    fetch(`/CaseRespondents/Search1?term=${encodeURIComponent(searchTerm)}`)
                        .then(response => response.json())
                        .then(data => {
                            if (typeof choices2 !== 'undefined') {
                                choices2.clearChoices();
                                choices2.setChoices(data.map(item => ({
                                    value: item.id,
                                    label: item.text,
                                    selected: false,
                                    disabled: false
                                })), 'value', 'label', true);
                            } else {
                                console.error("choices2 is not defined");
                            }
                        })
                        .catch(error => {
                            console.error('Error fetching search results:', error);
                        });
                });
            }

            // Handle form submission
            $("#createForm").submit(function (event) {
                event.preventDefault();

                $.ajax({
                    url: $(this).attr("action"),
                    type: "POST",
                    data: $(this).serialize(),
                    success: function (response) {
                        if (response.success) {
                            Swal.fire({
                                title: "Success!",
                                text: response.message,
                                icon: "success",
                                confirmButtonText: "OK",
                                customClass: {
                                    popup: "swal2-popup",
                                    confirmButton: "swal2-confirm"
                                }
                            }).then(() => {
                                $("#createForm")[0].reset();
                            });
                        } else {
                            Swal.fire({
                                title: "Error!",
                                text: response.message,
                                icon: "error",
                                confirmButtonText: "Try Again"
                            });
                        }
                    },
                    error: function () {
                        Swal.fire({
                            title: "Oops!",
                            text: "Something went wrong. Please try again.",
                            icon: "error",
                            confirmButtonText: "OK",
                            customClass: {
                                popup: "swal2-popup",
                                confirmButton: "swal2-confirm"
                            }
                        });
                    }
                });
            });
        });
    </script>

}
