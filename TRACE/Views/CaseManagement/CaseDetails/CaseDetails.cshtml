@{
    ViewData["Title"] = "My Cases - Case No.";
    var rawEmail = User.FindFirst("preferred_username")?.Value ?? "unknown@erc.ph";
    var username = rawEmail.Replace("@erc.ph", "");
    // var isCasePaused = 
}

<div class="crumbs">
    <a href="/dashboard">Dashboard</a> > <a href="javascript:history.back();">Case Management </a> > Case Title > Milestone
</div>

<div class="case-card-details shadow border-radius-5">
    <div class="case-details grid grid-casedeets-fr gap-20" id="caseDetails"></div>
    <hr />
    <div class="case-details grid grid-four-fr gap-20" id="othercaseDetails" style="display:none;"></div>

    <div class="case-arrow-div" onclick="toggleCaseDetails()" id="arrowToggle">
        <i class='bx bxs-down-arrow' id="arrowIcon"></i>
    </div>
    @await Html.PartialAsync("Components/Loader/Mini-Loader")
</div>

<div class="grid gap-20 grid-cms">
    <div class="cms-nav">
        <ul>
            <li onclick="showTabcase('milestones', event)" class="active"><i class='bx bx-check-circle'></i> Milestones</li>
            <li onclick="showTabcase('activities', event)"><i class='bx bxs-calendar'></i> Activities/Events</li>
            <li onclick="showTabcase('respondents', event)"><i class='bx bxs-user-pin'></i> Respondents</li>
            <li onclick="showTabcase('applicants', event)"><i class='bx bx-user-pin'></i> Applicants</li>
            <li onclick="showTabcase('documents', event)"><i class='bx bxs-file'></i>Attached Documents</li>
            <li onclick="showTabcase('assignpersonnel', event)"><i class='bx bxs-user-check'></i> Assigned Personnel</li>
            <li onclick="showTabcase('relatedcases', event)"><i class='bx bxs-folder-open'></i> Related Cases</li>
            <li onclick="showTabcase('hearings', event)"><i class='bx bxs-briefcase'></i> Hearings</li>
            <li onclick="showTabcase('tasks', event)"><i class='bx bx-list-check'></i> Tasks</li>
            <li onclick="showTabcase('notes', event)"><i class='bx bxs-note'></i> Notes</li>
        </ul>
    </div>

    <div class="cms-wrap shadow border-radius-5">
        <div id="milestones" class="cms-content active">
            <h3 style="margin-bottom:0px;">Case Pause</h3>
            <p>Pending External Party Action</p>
            <div class="case-aging-player flex h-center">
                <div class="flex h-center gap-10 playerbuttons">
                    <div id="casestatusPauseBtn" class="flex h-center clickablebuttons off" onclick="handleDrinardClick(this, 'Pause')">
                        <i class='bxr bx-pause-circle'></i> PAUSE
                    </div>
                    <div id="caseStatusResumeBtn" class="flex h-center clickablebuttons off" onclick="handleDrinardClick(this, 'Resume')">
                        <i class='bxr bx-play-circle'></i> RESUME
                    </div>
                </div>
            </div>
            <div class="player-details">
                <p><strong>Case Aging Status: </strong> <i id="caseagingstatus">No Data Available</i></p>
                <p><strong>Case Aging Remarks: </strong> <i id="caseagingstatus">No Data Available</i></p>
            </div>
            <hr />
            <h3>Milestones</h3>
            <div class="milestone-details">
                <span><strong>Case Age: </strong> <i id="caseage">No Data Available</i></span>
                <span><strong>Current Milestone Age: </strong> <i id="currentmilestoneage">No Data Available</i></span>
            </div>
            <div class="case-milestone-wrapper" >
                <div class="progress-container" id="casemilestone"></div>
            </div>
            @await Html.PartialAsync("Components/Loader/Mini-Loader-2")
        </div>

        <div id="activities" class="cms-content">
        
            <div class="cdeets flex h-center space-between">
                <h3>Activities/Events</h3>
                <button onclick="Create('CaseEvent')">+ Add Activities/Events</button>
            </div>
            <i class="helper">You can manage and view recent activities and events of this case.</i>
            <table class="my-cases-table">
                <thead>
                    <tr>
                        <th>BY</th>
                        <th>DESCRIPTION</th>
                        <th>DATE</th>
                    </tr>
                </thead>
                <tbody id="caseeventbody">
                </tbody>
            </table>
            <div class="pagination flex h-center gap-10" id="caseEventpagination">
                <span>Current Page: </span>
                <select>
                    <option>1</option>
                    <option>2</option>
                    <option>3</option>
                </select>
                <span class="prev flex h-center"><i class='bx bx-chevron-left'></i></span>
                <span class="next flex h-center"><i class='bx bx-chevron-right'></i></span>
            </div>
        </div>

        <div id="respondents" class="cms-content">
            <div class="cdeets flex h-center space-between">
                <h3>Respondents</h3>
                <button onclick="Create('CaseRespondents')">+ Add Respondents</button>
            </div>
            <i class="helper">You can manage respondents for this case.</i>
            <table class="my-cases-table">
                <thead>
                    <tr>
                        <th>COMPANY NAME</th>
                        <th>RESPONDENT NAME</th>
                        <th>ACTION</th>

                    </tr>
                </thead>
                <tbody id="respondentstbody">
                </tbody>
            </table>
        </div>

        <div id="applicants" class="cms-content">
            <div class="cdeets flex h-center space-between">
                <h3>Applicants</h3>
                <button onclick="Create('CaseApplicant')">+ Add Applicants</button>
            </div>
            <i class="helper">You can manage applicants for this case.</i>
            <table class="my-cases-table">
                <thead>
                    <tr>
                        <th>APPLICANT</th>
                        <th>ACTIONS</th>
                    </tr>
                </thead>
                <tbody id="applicantstbody">
                </tbody>
            </table>
        </div>

        <div id="documents" class="cms-content">
            <div class="cdeets flex h-center space-between">
                <h3>Update Milestones and Attach Documents</h3>
                <button onclick="Create('MilestonesAchieved')">Update Milestone</button>
            </div>
            <i class="helper">You can manage and download file attachments, as well as update case milestones.</i>
            @* <div class="nopaginationdiv">
                <table class="my-cases-table">
                    <thead>
                        <tr>
                            <th>FILE NAME</th>
                            <th>DATE</th>
                        </tr>
                    </thead>
                    <tbody id="attacheddocs">
                    </tbody>
                </table>
            </div> *@
            <div class="file-manager-wrapper grid grid-cms">
                <div class="folders-nav">
                    <ol id="folder-list">
                        <li class="folder-item" onclick="toggleFolder('Event', this, event)">
                            <i class='bx bxs-folder'></i> <span class="folder-label no-select">Activities and Events Files</span>
                            <ul class="subfolders"></ul>
                        </li>
                        <li class="folder-item" onclick="toggleFolder('Hearing', this, event)">
                            <i class='bx bxs-folder'></i> <span class="folder-label no-select">Hearing Files</span>
                            <ul class="subfolders"></ul>
                        </li>
                        <li class="folder-item" onclick="toggleFolder('Milestone', this, event)">
                            <i class='bx bxs-folder'></i> <span class="folder-label no-select">Milestone Files</span>
                            <ul class="subfolders"></ul>
                        </li>
                    </ol>


                </div>
                <div class="files-nav">
                    <div class="files-heading flex space-between h-center">
                        <h3 id="foldername">Choose Folder</h3>
                        <div class="filter-design border-radius-5 flex h-center file-search">
                            <i class='bx bx-search'></i>
                            <input type="text" placeholder="Search File" />
                        </div>
                    </div>
                    <div class="grid grid-files" id="Files">
                        <div class="no-document">
                            No Data Available
                        </div>
                    </div>
                </div>

                
            </div>
        </div>

        <div id="assignpersonnel" class="cms-content">
            <div class="cdeets flex h-center space-between">
                <h3>Current Assigned Personnel</h3>
                <button onclick="CreateAssignment()">+ Assign Personnel</button>
            </div>
            <i class="helper">List of users assigned to this case.</i>
            <div class="nopaginationdiv">
                <table class="my-cases-table">
                    <thead>
                        <tr>
                            <th>OFFICER TYPE</th>
                            <th>ASSIGNED PERSONEL</th>
                            <th>DATE ASSIGNED</th>
                            <th>ASSIGNED BY</th>
                            <th>ACTIONS</th>
                        </tr>
                    </thead>
                    <tbody id="caseassignment">

                    </tbody>
                </table>
            </div>

            <div class="nopaginationdiv">
                <h3>Case Assignment History</h3>
                <table class="my-cases-table">
                    <thead>
                        <tr>
                            <th>PERSONNEL</th>
                            <th>DATE ASSIGNED</th>
                            <th>DATE REMOVED</th>
                        </tr>
                    </thead>
                    <tbody id="caseassignmenthistory">
                    </tbody>
                </table>
            </div>
            
        </div>

        <div id="relatedcases" class="cms-content">
            <div class="cdeets flex h-center space-between">
                <h3>Related Cases</h3>
                <button onclick="CreateRelatedCase()">+ Related Case</button>
            </div>
            <i class="helper">You can view and manage related cases for reference.</i>
            <table class="my-cases-table">
                <thead>
                    <tr>
                        <th>CASE NO.</th>
                        <th>CASE TITLE</th>
                        <th>ACTION</th>
                    </tr>
                </thead>
                <tbody id="caserelated">
                </tbody>
            </table>
        </div>

        <div id="hearings" class="cms-content">
            <div class="cdeets flex h-center space-between">
                <h3>Hearings</h3>
                <button id="createhearing" onclick="CreateHearing()">+ New Hearing</button>
            </div>
            <i class="helper">You can manage hearings for this case.</i>
            <table class="my-cases-table">
                <thead>
                    <tr>
                        <th>HEARING CATEGORY</th>
                        <th>DATE AND TIME</th>
                        <th>VENUE</th>
                        <th>LINKS</th>
                        <th>TYPE</th>
                        <th>REMARKS</th>
                        <th>ACTION</th>
                    </tr>
                </thead>
                <tbody id="casehearing">
                </tbody>
            </table>
        </div>

        <div id="tasks" class="cms-content">
            <div class="cdeets flex h-center space-between">
                <h3>Tasks</h3>
                <button onclick="CreateTask()">+ Assign New Task</button>
            </div>
            <i class="helper">Manage tasks for this case.</i>
            <div class="nopaginationdiv">
                <h4>Pending Tasks</h4>
                <table class="my-cases-table">
                    <thead>
                        <tr>
                            <th>TASKED TO</th>
                            <th>DETAILS</th>
                            <th>TARGET DATE</th>
                            <th>ACTION</th>
                        </tr>
                    </thead>
                    <tbody id="pendingtask">
                    </tbody>
                </table>
            </div>

            <div class="nopaginationdiv">
                <h4>Completed Tasks</h4>
                <table class="my-cases-table">
                    <thead>
                        <tr>
                            <th>TASKED TO</th>
                            <th>DETAILS</th>
                            <th>TARGET DATE</th>
                            <th>COMPLETED DATE</th>
                        </tr>
                    </thead>
                    <tbody id="completedTask">
                    </tbody>
                </table>
            </div>
        </div>

        <div id="notes" class="cms-content">
            <div class="cdeets flex h-center space-between">
                <h3>Notes</h3>
                <button onclick="CreateNote()">+ New Note</button>
            </div>
            <i class="helper">You can manage and view notes for this case.</i>
            <table class="my-cases-table">
                <thead>
                    <tr>
                        <th>NOTED BY</th>
                        <th>DESCRIPTION</th>
                        <th>DATE</th>
                        <th>ACTION</th>
                    </tr>
                </thead>
                <tbody id="casenote">
                    <tr >
                        <td data-label="TITLE">IMPORTANT READ!</td>
                        <td data-label="DESCRIPTION">Please read the comments in source code left by FE developer</td>
                        <td data-label="DATE">03/07/2025</td>
                        <td data-label="ACTION" class="actions">
                            <i class='bx bxs-edit' title="Edit"></i>
                            <i class='bx bxs-x-circle' title="Archive"></i>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>

    </div>
</div>

<div id="drinardModal" class="drinard-modal drinard-hidden">
    <div class="drinard-modal-content">
        <h3 id="drinardModalTitle">Something went wrong!</h3>
        <input type="hidden" id="drinardActionType" name="actionType" />

        <label for="drinardRemarks">Remarks:</label>
        <textarea id="drinardRemarks" name="remarks" rows="4" class="drinard-textarea"></textarea>

        <div class="drinard-modal-buttons">
            <button onclick="submitDrinardAction()">Submit</button>
            <button onclick="closeDrinardModal()">Cancel</button>
        </div>
    </div>
</div>

<div id="hearingattachments" class="drinard-modal2 filehearing-hidden">
    <div class="drinard-modal-content">
        <h3>Attach Hearing Files</h3>
        <i>Attach files related to the selected Hearings</i><br />
        <input type="hidden" id="hearingidused" name="actionType" />
        <br />
        <div class="form-input-div uploader">
            <input type="file" id="fileUpload" multiple />
        </div>

        <div id="fileNamesDisplay" style="margin-top: 10px; font-style: italic;"></div>

        <div class="drinard-modal-buttons">
            <button onclick="callPostCaseBlobDocumentAPI()">Submit</button>
            <button onclick="closeFilesHearingModal()">Cancel</button>
        </div>
    </div>
</div>


<script>
    const loggedInUsername = "@username";
</script>
<script src="~/js/CaseDetails.js"></script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const fileInput = document.getElementById("fileUpload");
        const fileNamesDisplay = document.getElementById("fileNamesDisplay");

        fileInput.addEventListener("change", function () {
            files = Array.from(fileInput.files);
            if (files.length > 0) {
                fileNamesDisplay.innerHTML = files.map(f => f.name).join("<br>");
            } else {
                fileNamesDisplay.textContent = "No files selected.";
            }
        });
    });

    async function toggleFolder(module, listItem, event) {
        if (event) event.stopPropagation();

        const subfolderList = listItem.querySelector('.subfolders');

        if (subfolderList.style.display === 'none' || subfolderList.style.display === '') {
            if (!subfolderList.hasChildNodes()) {
                await getBlobFolders(module, listItem);
            }
            subfolderList.style.display = 'block';
        } else {
            subfolderList.style.display = 'none';
        }
    }

    async function getBlobFolders(module, listItem) {
        const urlParams = new URLSearchParams(window.location.search);
        const ercId = urlParams.get('id');

        try {
            const response = await fetch(`/CaseBlobDocument/GetBlobFoldersdac?module=${module}&ercId=${ercId}`);
            const result = await response.json();

            const subfolderList = listItem.querySelector('.subfolders');
            subfolderList.innerHTML = '';

            if (result.success && result.data.length > 0) {
                result.data.forEach(item => {
                    const li = document.createElement('li');
                    li.classList.add('subfolder-item');
                    li.innerHTML = `
                        <i class='bx bxs-folder'></i>
                        <span class="folder-label no-select" onclick="showDocuments('${item.module}', ${item.dataId})">${item.milestone ? `${item.dataId} (${item.milestone})` : item.dataId}</span>`;

                    li.addEventListener('click', function(e) {
                        e.stopPropagation();
                    });

                    subfolderList.appendChild(li);
                });
            } else {
                const li = document.createElement('li');
                li.textContent = result.message || 'No folders found.';
                subfolderList.appendChild(li);
            }
        } catch (error) {
            console.error("Error fetching folders:", error);
            const subfolderList = listItem.querySelector('.subfolders');
            subfolderList.innerHTML = `<li style="font-style:italic;">Error loading folders.</li>`;
        }
    }

    function showDocuments(module, dataid) {
        var param = module;
        var _dataid = dataid;


        const foldername = document.getElementById('foldername');
        if (foldername) {
            if (module === "Hearing") {
                foldername.innerHTML = 'Hearing Files > '+ dataid ;
            } else if (module === "Event") {
                foldername.innerHTML = 'Activities and Events Files > '+ dataid ;
            } else {
                foldername.innerHTML = 'Milestone Files > '+ dataid ;
            }
        }

        const urlParams = new URLSearchParams(window.location.search);
        const erccaseId = urlParams.get('id');
        fetch(`/CaseBlobDocument/GetCaseBlobDocumentByModule?module=${param}&ercId=${erccaseId}&dataId=${_dataid}`)
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(data => {
                const applicantstbody = document.getElementById('Files');
                applicantstbody.innerHTML = '';
                if (data && Array.isArray(data.data) && data.data.length > 0) {
                    data.data.forEach(event => {
                        const formattedDate = event.DateAssigned
                            ? new Date(event.DateAssigned).toLocaleDateString('en-GB')
                            : 'N/A';

                        let fileIcon = '/images/icons/DOC.png';
                        const link = event.attachmentLink?.toLowerCase() || '';

                        if (link.includes('.pdf')) fileIcon = '/images/icons/PDF.png';
                        else if (link.includes('.pptx')) fileIcon = '/images/icons/pptx.png';
                        else if (link.includes('.ico')) fileIcon = '/images/icons/ico.png';
                        else if (link.includes('.xlsx')) fileIcon = '/images/icons/XL.png';
                        else if (link.includes('.docx')) fileIcon = '/images/icons/DOC.png';
                        else if (link.includes('.png')) fileIcon = '/images/icons/png.png';

                        applicantstbody.innerHTML += `
                            <div class="thefile">
                                <div class="file-options">⋮</div>
                                <img src="${fileIcon}" class="filetype-img" />
                                <p>${event.attachmentName}</p>
                            </div>`;
                    });
                } else {
                    applicantstbody.innerHTML = `
                        <div class="no-document">No Document</div>
                    `;
                }
            })
            .catch(error => {
                console.error('Error fetching case files:', error);
            });
    }

    function callPostCaseBlobDocumentAPI() {
        const fileInput = document.getElementById("fileUpload");
        const newId = document.getElementById("hearingidused").value;
        const urlParams = new URLSearchParams(window.location.search);
        const erccaseId = urlParams.get('id');
        const formData = new FormData();

        files = Array.from(fileInput.files);

        if (files.length === 0) {
            Swal.fire("No Files", "Please select files to upload.", "warning");
            return;
        }

        formData.append("CaseNumber", erccaseId);
        formData.append("DataId", newId);
        formData.append("Module", "Hearing");

        files.forEach(file => {
            formData.append("Files", file);
        });

        $.ajax({
            url: '/MilestonesAchieved/PostCaseBlobDocument',
            type: "POST",
            data: formData,
            processData: false,
            contentType: false,
            success: function (response) {
                Swal.fire({
                    title: "File Uploaded!",
                    text: "Files have been uploaded successfully.",
                    icon: "success",
                    confirmButtonText: "OK"
                });
                // Optional: clear file input and display
                fileInput.value = "";
                document.getElementById("fileNamesDisplay").innerHTML = "";
                files = [];
            },
            error: function (xhr) {
                console.log(xhr.responseText);
                Swal.fire({
                    title: "Oops!",
                    text: "Something went wrong while calling the PostCaseBlobDocument API.",
                    icon: "error",
                    confirmButtonText: "OK"
                });
            }
        });
    }
    function CreateHearing() {
        const urlParams = new URLSearchParams(window.location.search);
        const erccaseId = urlParams.get('id');
        window.location.href = `/Hearing/create?id=${erccaseId}`;
    }
    function CreateRelatedCase() {
        const urlParams = new URLSearchParams(window.location.search);
        const erccaseId = urlParams.get('id');
        window.location.href = `/Relatedcase/create?id=${erccaseId}`;
    } 
    function CreateAssignment() {
        const urlParams = new URLSearchParams(window.location.search);
        const erccaseId = urlParams.get('id');
        window.location.href = `/CaseAssignment/create?id=${erccaseId}`;
    }
    function CreateTask() {
        const urlParams = new URLSearchParams(window.location.search);
        const erccaseId = urlParams.get('id');
        window.location.href = `/CaseTask/create?id=${erccaseId}`;
    }
    function CreateNote() {
        const urlParams = new URLSearchParams(window.location.search);
        const erccaseId = urlParams.get('id');
        window.location.href = `/CaseNote/create?id=${erccaseId}`;
    }
    function AttachDocument() {
        const urlParams = new URLSearchParams(window.location.search);
        const erccaseId = urlParams.get('id');
        window.location.href = `/caseattachments/upload?id=${erccaseId}`;
    }
    function Create(controllerName) {
        const urlParams = new URLSearchParams(window.location.search);
        const erccaseId = urlParams.get('id');
        window.location.href = '/' + controllerName + `/create?id=${erccaseId}`;
    }

</script>