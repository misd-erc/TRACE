@{
    ViewData["Title"] = "Notifications";
}
<div class="crumbs">
    <a href="javascript:history.back();" id="goBackLink">Go Back</a> > Notifications
</div>

<h1>@ViewData["Title"]</h1>
<p>Easily Manage and read your system notifications.</p>
    
<div class="grid gap-20 grid-cms">
    <div class="cms-nav">
        <ul>
            <li onclick="showTab2('all')" class="flex space-between h-center active"> All Notifications <span id="allnotifCounter" class="counter">N/A</span></li>
            <li onclick="showTab2('unread')" class="flex space-between h-center"> Unread <span id="unreadnotifCounter" class="counter">2</span></li>
            <li onclick="showTab2('archive')" class="flex space-between h-center"> Archived <span id="archivednotifCounter" class="counter">1</span></li>
        </ul>
    </div>

    <div class="cms-wrap shadow">


        <div id="all" class="cms-content-notif active">
            <div class="main-head-div flex h-center space-between">
                <h2>All Notifications</h2>
                <div class="btn-div flex h-center gap-10">
                    <button id="selectAllBtn">SELECT ALL</button>
                    <button class="red-btn" id="deselectall" disabled>DESELECT ALL</button>
                    <button id="archiveselected" disabled>ARCHIVE SELECTED</button>
                </div>
            </div>

            <ul class="notifications-list" id="notifList1">
                <li>
                    <div class="action-div flex h-center gap-10">
                        <input type="checkbox" title="Select this notification." />
                        <i class="bx bxs-archive" title="Archive this notification."></i>
                    </div>
                    <div class="flex h-center space-between notif-item-wrap">
                        <div class="notif-content-div">
                            <span>A milestone has been achieved for case number: </span><strong>2025-0001-LC</strong>.
                        </div>
                        <div class="notif-timestamp">
                            <span>09:00 AM</span>
                        </div>
                    </div>
                </li>

                <li>
                    <div class="action-div flex h-center gap-10">
                        <input type="checkbox" title="Select this notification." />
                        <i class="bx bxs-archive" title="Archive this notification."></i>
                    </div>
                    <div class="flex h-center space-between notif-item-wrap gap-10">
                        <div class="notif-content-div">
                            <span>A milestone has been achieved for case number: </span><strong>2025-0002-LC</strong>.
                        </div>
                        <div class="notif-timestamp">
                            <span>07:00 AM</span>
                        </div>
                    </div>
                </li>

                <li>
                    <div class="action-div flex h-center gap-10">
                        <input type="checkbox" title="Select this notification." />
                        <i class="bx bxs-archive" title="Archive this notification."></i>
                    </div>
                    <div class="flex h-center space-between notif-item-wrap">
                        <div class="notif-content-div">
                            <span>A milestone has been achieved for case number: </span><strong>2025-0003-LC</strong>.
                        </div>
                        <div class="notif-timestamp">
                            <span>05:00 AM</span>
                        </div>
                    </div>
                </li>
            </ul>
        </div>

        <div id="unread" class="cms-content-notif">
            <div class="main-head-div flex h-center space-between">
                <h2>Unread Notifications</h2>
                <div class="btn-div flex h-center gap-10">
                    <button id="selectUnreadBtn">SELECT ALL</button>
                    <button class="red-btn" id="deselectunread" disabled>DESELECT ALL</button>
                    <button id="archiveselectedunread" disabled>ARCHIVE SELECTED</button>
                </div>
            </div>

            <ul class="notifications-list" id="unreadnotif">
            </ul>
        </div>

        <div id="archive" class="cms-content-notif">
            <div class="main-head-div flex h-center space-between">
                <h2>Archived Notifications</h2>
                <div class="btn-div flex h-center gap-10">
                    <button id="selectarchiveBtn">SELECT ALL</button>
                    <button class="red-btn" id="deselectarchive" disabled>DESELECT ALL</button>
                    <button id="unarchiveselected" disabled>UNARCHIVE SELECTED</button>
                </div>
            </div>

            <ul class="notifications-list" id="archivednotif">
            </ul>
        </div>
    </div>
</div>
<script>
    document.addEventListener("DOMContentLoaded", function () {
             fetchallNotificationsInModule();
    });

    async function fetchallNotificationsInModule() {
        try {
            const response = await fetch('/Notification/getNotification');
            const notifications = await response.json();

            const allnotifList = document.getElementById('notifList1');
            const unreadnotifList = document.getElementById('unreadnotif');
            const archivednotifList = document.getElementById('archivednotif');

            const allCounter = document.getElementById('allnotifCounter');
            const unreadCounter = document.getElementById('unreadnotifCounter');
            const archivedCounter = document.getElementById('archivednotifCounter');

            allnotifList.innerHTML = '';
            unreadnotifList.innerHTML = '';
            archivednotifList.innerHTML = '';

            if (notifications.length === 0) {
                allnotifList.innerHTML = `<li><span class="ndesc nothing">No notifications available.</span></li>`;
                unreadnotifList.innerHTML = `<li><span class="ndesc nothing">No unread notifications.</span></li>`;
                archivednotifList.innerHTML = `<li><span class="ndesc nothing">No archived notifications.</span></li>`;
                return;
            }

            let unreadCount = 0;
            let archivedCount = 0;

            notifications.forEach(notif => {
                const linotif = document.createElement('li');
                linotif.innerHTML = `
                    <div class="action-div flex h-center gap-10">
                        <input type="checkbox" title="Select this notification." />
                    </div>
                    <div class="flex h-center space-between notif-item-wrap">
                        <div class="notif-content-div">
                            <span>${notif.message}</span>
                            <span class="notif-status ${notif.isRead ? 'read' : 'unread'}">[${notif.isRead ? 'Read' : 'Unread'}]</span>
                        </div>
                        <div class="notif-timestamp">
                            <span>${formatDate(notif.createdAt)}</span>
                        </div>
                    </div>
                `;
                linotif.addEventListener('click', async () => {
                        try {
                            await fetch('/Notification/MarkAsRead', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json'
                                },
                                body: JSON.stringify(notif.notificationID)
                            });

                            window.location.href = `/CaseDetails?id=${notif.caseID}`;
                        } catch (error) {
                            console.error('Failed to mark notification as read:', error);
                            window.location.href = `/CaseDetails?id=${notif.caseID}`;
                        }
                });

                allnotifList.appendChild(linotif.cloneNode(true));

                if (notif.isArchived) {
                    archivednotifList.appendChild(linotif.cloneNode(true));
                    archivedCount++;
                } else if (!notif.isRead) {
                    unreadnotifList.appendChild(linotif.cloneNode(true));
                    unreadCount++;
                }
            });

            allCounter.textContent = notifications.length;
            unreadCounter.textContent = unreadCount;
            archivedCounter.textContent = archivedCount;

            if (unreadCount === 0) unreadnotifList.innerHTML = `<li><span class="ndesc nothing">No unread notifications.</span></li>`;
            if (archivedCount === 0) archivednotifList.innerHTML = `<li><span class="ndesc nothing">No archived notifications.</span></li>`;

        } catch (error) {
            console.error('Error loading notifications:', error);
        }
    }



    function formatDate(dateString) {
        const date = new Date(dateString);
        if (isNaN(date)) return dateString;
        return date.toLocaleString('en-US', {
            day: '2-digit', month: 'short', year: 'numeric',
            hour: '2-digit', minute: '2-digit'
        });
    }
</script>
<script src="/js/Notifications.js"></script>