@model TRACE.Models.Hearing

@{
    ViewData["Title"] = "Create";
}

<div class="crumbs">
    <a href="javascript:history.back();">Go Back</a> > Add Hearing
</div>
<form id="createForm" asp-action="Create" method="post">
    <div class="main-head-div flex h-center space-between">
        <div class="title-div">
            <h3>ADD HEARING</h3>
            <p>This page is for creating hearings for the selected erc case</p>
        </div>

        <div class="btn-div">
            <input type="submit" value="CREATE" class="btn btn-primary" />
        </div>
    </div>
    <div class="case-card shadow border-radius-5">
        <div class="form-div  create-lc">
            <div class="grid grid-three-fr gap-10">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-input-div">
                    <label asp-for="HearingDate" class="control-label">Hearing Date</label>
                    <input asp-for="HearingDate" type="date" class="form-control" />
                    <span asp-validation-for="HearingDate" class="text-danger"></span>
                </div>
                <div class="form-input-div">
                    <label asp-for="Time" class="control-label"></label>
                    <select asp-for="Time" id="timeDropdown"></select>
                    <span asp-validation-for="Time" class="text-danger"></span>
                </div>
                <div class="form-input-div">
                    <label asp-for="HearingVenueId" class="control-label"> Hearing Venue</label>
                    <select asp-for="HearingVenueId" class="form-control" asp-items="ViewBag.HearingVenueId"></select>
                </div>
                <div class="form-input-div">
                    <label asp-for="Remarks" class="control-label"></label>
                    <input asp-for="Remarks" class="form-control" />
                    <span asp-validation-for="Remarks" class="text-danger"></span>
                </div>
                <div class="form-input-div">
                    <label asp-for="HearingCategoryId" class="control-label">Hearing Category</label>
                    <select asp-for="HearingCategoryId" class="form-control" asp-items="ViewBag.HearingCategoryId"></select>
                </div>

                <div class="form-input-div checktype">
                    <label class="control-label">Hearing Types</label>
                    <div>
                        @{
                            var hearingTypes = ViewBag.HearingTypes as IEnumerable<SelectListItem>;
                        }

                        @if (hearingTypes != null)
                        {
                            foreach (var hearingType in hearingTypes)
                            {
                                <div>
                                    <input type="checkbox" name="HearingTypes" value="@hearingType.Value" /> @hearingType.Text
                                </div>
                            }
                        }
                        else
                        {
                            <p>No hearing types available.</p>
                        }
                    </div>
                </div>

                <div class="form-input-div">
                    <label asp-for="IsApproved" class="control-label">Approved</label>
                    <select asp-for="IsApproved" class="form-control">
                        <option value="true">YES</option>
                        <option value="false">NO</option>
                    </select>
                </div>
                <div class="form-input-div">
                    <label asp-for="OtherVenue" class="control-label">Other Venue</label>
                    <input asp-for="OtherVenue" class="form-control" />
                    <span asp-validation-for="OtherVenue" class="text-danger"></span>
                </div>

                <div class="form-input-div">
                    <label asp-for="HearingLinks" class="control-label">Hearing Link</label>
                    <input asp-for="HearingLinks" class="form-control" />
                    <span asp-validation-for="HearingLinks" class="text-danger"></span>
                </div>

                <div class="form-input-div">
                    <label asp-for="ErccaseId" class="control-label" style="display:none"> </label>
                    <input asp-for="ErccaseId" type="hidden" class="form-control" id="ErccaseId" />
                </div>
            </div>
        </div>
    </div>
</form>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        $(document).ready(function () {
            $("#createForm").submit(function (event) {
                event.preventDefault();

                var formData = $(this).serializeArray();

                console.log("Standard form data:");
                formData.forEach(function (field) {
                    console.log(`${field.name}: ${field.value}`);
                });

                var hearingTypes = [];
                $("input[name='HearingTypes']:checked").each(function () {
                    hearingTypes.push($(this).val());
                });

                console.log("Selected Hearing Types:", hearingTypes);

                $.ajax({
                    url: $(this).attr("action"),
                    type: "POST",
                    data: $(this).serialize(),
                    success: function (response) {
                        if (response.success) {
                            Swal.fire({
                                title: "Success!",
                                text: response.message,
                                icon: "success",
                                confirmButtonText: "OK",
                                customClass: {
                                    popup: "swal2-popup",
                                    confirmButton: "swal2-confirm"
                                }
                            }).then(() => {
                                $("#createForm")[0].reset(); 
                            });
                        } else {
                            Swal.fire({
                                title: "Error!",
                                text: response.message,
                                icon: "error",
                                confirmButtonText: "Try Again"
                            });
                        }
                    },
                    error: function () {
                        Swal.fire({
                            title: "Oops!",
                            text: "Something went wrong. Please try again.",
                            icon: "error",
                            confirmButtonText: "OK",
                            customClass: {
                                popup: "swal2-popup",
                                confirmButton: "swal2-confirm"
                            }
                        });
                    }
                });

            });
        });
    </script>
}
<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Get the URL parameter
        const urlParams = new URLSearchParams(window.location.search);
        const erccaseId = urlParams.get('id');
        createTimeDropdown();
        // Set the hidden input field value if erccaseId exists
        if (erccaseId) {
            const inputElement = document.getElementById('ErccaseId');

            if (inputElement) {
                inputElement.value = erccaseId;
            } else {
                console.error('ErccaseId input not found');
            }
        }
    });
    function createTimeDropdown() {
        const select = document.getElementById('timeDropdown');

        for (let hour = 0; hour < 24; hour++) {
            for (let minute = 0; minute < 60; minute += 30) { // Interval every 30 minutes
                const formattedHour = hour.toString().padStart(2, '0');
                const formattedMinute = minute.toString().padStart(2, '0');
                const time = `${formattedHour}:${formattedMinute}`;

                const option = document.createElement('option');
                option.value = time;
                option.textContent = time;
                select.appendChild(option);
            }
        }
    }

</script>
